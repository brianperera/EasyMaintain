@model EasyMaintain.CoreWebMVC.Models.WorkshopModel

<h1 class="text-light">Workshops</h1>
<div id="CreateTitle">
    <h3 class="text-light">Create New</h3>
</div>
<div style="display: none" id="UpdateTitle">
    <h3 class="text-light">Update Details</h3>
</div>


    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary(true)

    <div class="example">
        <div class="flex-grid">
            <div class="row cells2">
                <div class="cell-form margin-right-10 cell size4">
                    <label>Workshop Name</label>
                    <div class="input-control text full-size">
                        @Html.TextBoxFor(m => m.WorkshopName, new { @class = "Name", placeholder = "Name" })
                    </div>
                </div>
                <div class="cell-form margin-right-10 cell size4">
                    <label>Location</label>
                    <div class="input-control text full-size">
                        @Html.TextBoxFor(m => m.Location, new { @class = "Location", placeholder = "Location" })
                    </div>
                </div>
            </div>
            <div class="row cells2">
                <div class="cell-form margin-right-10 cell size4">
                    <label class="display-block">Address</label>
                    <div class="input-control textarea full-size">
                        @Html.TextAreaFor(m => m.Address, new { @class = "Address", placeholder = "Address" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />

    <div id="CreateButton">
        <button class="button primary" onclick="createNewWorkshop()"><span class="mif-plus"></span> Create</button>
    </div>
    <div style="display: none" id="EditButtons">
        <button class="button warning" onclick="saveEditedWorkshop()"><span class="mif-loop2"></span> Update</button>
        <button class="button alert" onclick="deleteWorkshop()"><span class="mif-cross"></span> Delete</button>
        <button class="button primary" onclick="cancel()"><span class="mif-plus"></span> New Workshop</button>
    </div>

    <hr class="thin bg-grayLighter">
    <table class="dataTable border bordered" data-auto-width="false">
        <thead>
            <tr>
                <td class="sortable-column sort-asc" style="width: 100px">Model ID</td>
                <td class="sortable-column">Manufacturer</td>
                <td class="sortable-column">Model</td>
                <td class="sortable-column" style="width: 100px">Update</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var models in Model.Workshops)
            {
                <tr>
                    <td>@models.WorkshopID</td>
                    <td>@models.Name</td>
                    <td>@models.Location</td>
                    <td class="align-center"><button class="toolbar-button" onclick="LoadWorkshop(@models.WorkshopID)"><span class="mif-pencil"></span></button></td>
                </tr>
            }
        </tbody>
        @Html.HiddenFor(model => model.token.AccessToken, new { id = "token" })
    </table>

    <script>

        function tab_click(tab) {
            console.log(tab);
            return true;
        }
        function tab_change(tab) {
            console.log(tab);
        }


        function createNewWorkshop() {
            debugger;
            var CurrentCoponent = {
                Name: $(".Name").val(),
                Location: $(".Location").val(),
                Address: $(".Address").val(),
            }

            $.ajax({
                url: '/Workshop/SaveNewWorkshop',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(CurrentCoponent),
                headers: {
                    'Authorization': 'Bearer ' + $('#token').val(),
                },
                success: function (data) {

                    $.Notify({
                        caption: 'Workshops',
                        content: 'Workshops successfully added.',
                        type: 'success'
                    });

                    debugger;
                    $('.sidebar').children().removeClass('active');
                    $('.sidebar li:nth-child(1)').addClass('active');

                    $('#partial-view-container').html(data);
                },
            });

        }

        function saveEditedWorkshop() {
            debugger;
            var CurrentCoponent = {
                Name: $(".Name").val(),
                Location: $(".Location").val(),
                Address: $(".Address").val(),
            }

            $.ajax({
                url: '/workshop/saveEditedWorkshop',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(CurrentCoponent),
                success: function (data) {

                    $.Notify({
                        caption: 'Workshops',
                        content: 'Workshop Successfully updated.',
                        type: 'success'
                    });
                    $('#partial-view-container').html(data);
                    chanageButtons("edit");

                },
            });

        }

        function LoadWorkshop(viewName) {
            var Model = { WorkshopID: viewName }

            $.ajax({
                url: '/workshop/LoadWorkshop',
                type: 'POST',
                data: JSON.stringify(Model),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    debugger;
                    $('#partial-view-container').html(data);
                    chanageButtons("edit");
                },
                error: function () {
                    $.Notify({
                        caption: 'Workshops',
                        content: 'Workshop Editing Failed .',
                        type: 'alert'
                    });
                }
            });

        }

        function cancel() {

            $.ajax({
                url: '/workshop/cancel',
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    debugger;
                    $('#partial-view-container').html(data);
                    chanageButtons("create");
                },
                error: function () {
                    $.Notify({
                        caption: 'Aircrafts',
                        content: 'Aircraft Editing Failed .',
                        type: 'alert'
                    });
                }
            });

        }

        function deleteWorkshop() {

            $.ajax({
                url: '/workshop/deleteWorkshop',
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {

                    $.Notify({
                        caption: 'Workshop',
                        content: 'Workshop successfully deleted.',
                        type: 'success'
                    });

                    debugger;
                    $('#partial-view-container').html(data);
                    chanageButtons("create");
                },
                error: function () {
                    $.Notify({
                        caption: 'Workshops',
                        content: 'Workshop Editing Failed .',
                        type: 'alert'
                    });
                }
            });

        }

        function chanageButtons(button) {
            debugger;
            if (button == "edit") {
                debugger;
                $("#CreateButton").hide();
                $("#CreateTitle").hide();
                $("#UpdateTitle").show();
                $("#EditButtons").show();
            }
            if (button == "create") {
                debugger;
                $("#CreateButton").show();
                $("#CreateTitle").show();
                $("#UpdateTitle").hide();
                $("#EditButtons").hide();
            }

        }

    </script>

