@model EasyMaintain.CoreWebMVC.Models.ComponentWorkModel

<h1 class="text-light">Edit Work Order</h1>



    <div class="tabcontrol2" data-role="tabcontrol" data-on-tab-click="tab_click" data-on-tab-change="tab_change">
        <ul class="tabs">
            <li><a href="#frame_1">View/Edit Order</a></li>
            <li><a href="#frame_2">Delivery Details</a></li>
        </ul>
        <div class="frames">
            <div class="frame"  name="viewedit" id="frame_1">
                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true)

                <div class="example">
                    <div class="flex-grid">
                        <div class="row cells2">
                            <div class="cell-form margin-right-10 cell size4">
                                <label>Component Name</label>
                                <div class="input-control text full-size">
                                    @Html.TextBoxFor(m => m.ComponentName, new { @class = "ComponentName", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="cell-form margin-right-10 cell size4">
                                <label class="display-block">Workshop</label>
                                <div class="input-control select full-size">
                                   @Html.TextBoxFor(m => m.WorkshopLocation, new { @class = "WorkshopLocation", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="cell-form margin-right-10 cell size4">
                                <label class="display-block">Creation Date</label>
                                <div class="input-control select full-size">
                                    @Html.TextBoxFor(m => m.CreatedDate, new { @readonly = "readonly", @class = "CreatedDate" })
                                </div>
                            </div>
                        </div>
                        <div class="row cells2">
                            <div class="cell-form margin-right-10 cell size4">
                                <label>Serial Number</label>
                                <div class="input-control text full-size">
                                    @Html.TextBoxFor(m => m.SerialNumber, new { @class = "SerialNumber", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="cell-form margin-right-10 cell size4">
                                <label>Flight Number</label>
                                <div class="input-control text full-size">
                                    @Html.TextBoxFor(m => m.FlightNumber, new { @class = "FlightNumber", placeholder = "Flight Number" })
                                </div>
                            </div>
                        </div>
                        <div class="row cells2">
                            <div class="cell-form margin-right-10 cell size4">
                                <label class="display-block">Description</label>
                                <div class="input-control textarea full-size">
                                    @Html.TextAreaFor(m => m.Description, new { @class = "Description", placeholder = "Description" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>      

                <button class="button primary" onclick="saveWorkOrder()"><span class="mif-plus"></span> Save</button>
            </div>
            <div class="frame"  name="deliveryDetails" id="frame_2">
                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true)

                <div class="example">
                    <div class="flex-grid">
                        <div class="row cells2">
                            <div class="cell-form margin-right-10 cell size4">
                                <label class="display-block">Delivery Method</label>
                                <div class="input-control select full-size">
                                    @Html.DropDownListFor(m => m.DeliveryDetails.DeliveryMethod, new SelectList(Model.DeliveryMethods), new { @class = "DeliveryMethod" })
                                </div>
                            </div>
                            <div class="cell-form margin-right-10 cell size4">
                                <label>Delivery Date</label>
                                <div class="input-control text full-size">
                                    <div class="input-control text" data-role="datepicker">
                                        <input type="text" id="Date" value="@Model.DeliveryDetails.DeliveryDate">
                                        <button class="button"><span class="mif-calendar"></span></button>
                                    </div>
                                </div>
                            </div>
                            <div class="cell-form margin-right-10 cell size4">
                                <label>Address</label>
                                <div class="input-control text full-size">
                                    <div class="input-control text full-size">
                                        @Html.TextBoxFor(m => m.DeliveryDetails.AddressLine1, new { @class = "LineOne", placeholder = "Line 1" })
                                    </div>
                                    <div class="input-control text full-size">
                                        @Html.TextBoxFor(m => m.DeliveryDetails.AddressLine2, new { @class = "LineTwo", placeholder = "Line 2" })
                                    </div>
                                    <div class="input-control text full-size">
                                        @Html.TextBoxFor(m => m.DeliveryDetails.City, new { @class = "City", placeholder = "City" })
                                    </div>
                                    <div class="input-control text full-size">
                                        @Html.TextBoxFor(m => m.DeliveryDetails.State, new { @class = "State", placeholder = "State" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row cells2">
                            <div class="cell-form margin-right-10 cell size4">
                                <label>Person InCharge</label>
                                <div class="input-control text full-size">
                                    @Html.TextBoxFor(m => m.DeliveryDetails.PersonInCharge, new { @class = "PersonInCharge", placeholder = "Person InCharge" })
                                </div>
                            </div>
                        </div>
                        <div class="row cells2">
                            <div class="cell-form margin-right-10 cell size4">
                                <label class="display-block">Additional Notes</label>
                                <div class="input-control textarea full-size">
                                    @Html.TextAreaFor(m => m.DeliveryDetails.AddtionalNotes, new { @class = "ShippingNotes", placeholder = "Additional Notes" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.token.AccessToken, new { id = "token" });
    </div>



    <script>
    function tab_click(tab){
        console.log(tab);
        return true;
    }
    function tab_change(tab){
        console.log(tab);
    }

    function saveWorkOrder() {

        var CurrentCoponent = {
            Component: $(".ComponentName").val(),
            CreatedDate: $(".CreatedDate").val(),
            Description: $(".Description").val(),
            Location: $(".WorkshopLocation").val(),
            SerialNumber: $(".SerialNumber").val(),
            FlightNumber: $(".FlightNumber").val(),
            DeliveryDetails: {
                DeliveryDate: $("#Date").val(),
                DeliveryMethod: $(".DeliveryMethod").val(),
                PersonInCharge: $(".PersonInCharge").val(),
                AddressLine1: $(".LineOne").val(),
                AddressLine2: $(".LineTwo").val(),
                City: $(".City").val(),
                State: $(".State").val(),
                AddtionalNotes: $(".ShippingNotes").val()
            }
        }
        debugger;

        $.ajax({
            url: '/componentwork/SaveWorkOrder',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(CurrentCoponent),
            headers: {
                'Authorization': 'Bearer ' + $('#token').val(),
            },
            success: function (data) {

                $.Notify({
                    caption: 'Component Work',
                    content: 'WorkOrder successfully added.',
                    type: 'success'
                });

                debugger;
                $('.sidebar').children().removeClass('active');
                $('.sidebar li:nth-child(1)').addClass('active');

                $('#partial-view-container').html(data);
            },
        });

    }
    </script>




