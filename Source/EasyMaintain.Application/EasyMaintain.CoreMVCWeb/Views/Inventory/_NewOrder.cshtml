@model EasyMaintain.CoreWebMVC.Models.InventoryViewModel

<h1 class="text-light">Create Order</h1>



<div class="tabcontrol2" data-role="tabcontrol" data-on-tab-click="tab_click" data-on-tab-change="tab_change">
    <ul class="tabs">
        <li ><a href="#frame_1">Create Order</a></li>
        <li ><a href="#frame_2">Delivery Details</a></li>
        <li><a href="#frame_3">Payment Details</a></li>
    </ul>
    <div class="frames">
        <div class="frame" id="frame_1">
            <hr />

            <div class="example">
                <div class="flex-grid">
                    <div class="row cells2">
                        <div class="cell-form margin-right-10 cell size4">
                            <label>Customer Name</label>
                            <div class="input-control text full-size">
                               @Html.TextBoxFor(m => m.CustomerName, new { @class = "CustomerName", placeholder = "Customer Name" })
                            </div>
                        </div>
                        <div class="cell-form margin-right-10 cell size4">
                            <label class="display-block">Company Name</label>
                            <div class="input-control select full-size">
                                @Html.TextBoxFor(m => m.CompanyName, new { @class = "CompanyName", placeholder = "Company Name" })
                            </div>
                        </div>
                    </div>
                    <div class="row cells2">
                        <div class="cell-form margin-right-10 cell size4">
                            <label class="display-block">Additional Details</label>
                            <div class="input-control textarea full-size">
                                @Html.TextAreaFor(m => m.AdditionalNotes, new { @class = "AdditionalNotes", placeholder = "Additional Details" })
                            </div>
                        </div>
                    </div>
                    <div class="row cells2">
                        <div class="cell-form margin-right-10 cell size4">
                            <label>Add Part to list</label>
                            <div class="input-control text full-size">
                                <input type="text" id="PartName" placeholder="Part Name" />
                                <button class="button primary" onclick="addPart()"><span class="mif-plus"></span> Add</button>
                            </div>
                        </div>
                    </div>

                </div>
            </div>    
            <div>
                <table class="dataTable border bordered" data-auto-width="false">
                    <thead>
                        <tr>
                            <td class="sortable-column">Part Name</td>
                            <td class="sortable-column" style="width: 100px">Remove</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var workOrder in Model.PartsList)
                        {
                            <tr>
                                <td>@workOrder</td>
                                <td class="align-center"><button class="toolbar-button" onclick="DeletePart( this )" data-assigned-id="@workOrder"><span class="mif-cross"></span></button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
  
            <button class="button primary" onclick="newOrder()"><span class="mif-plus"></span> Create</button>
        </div>       
        <div class="frame" id="frame_2">
        @Html.AntiForgeryToken()
        <hr />
        @Html.ValidationSummary(true)

        <div class="example">
            <div class="flex-grid">
                <div class="row cells2">
                    <div class="cell-form margin-right-10 cell size4">
                        <label class="display-block">Delivery Method</label>
                        <div class="input-control select full-size">
                            @Html.DropDownListFor(m => m.Deliverydetails.DeliveryMethod, new SelectList(Model.DeliveryMethods), new { @class = "DeliveryMethod" })
                        </div>
                    </div>
                    <div class="cell-form margin-right-10 cell size4">
                        <label>Delivery Date</label>
                        <div class="input-control text full-size">
                            <div class="input-control text" data-role="datepicker">
                                <input type="text" id="Date" value="@Model.Deliverydetails.DeliveryDate">
                                <button class="button"><span class="mif-calendar"></span></button>
                            </div>
                        </div>
                    </div>
                    <div class="cell-form margin-right-10 cell size4">
                        <label>Address</label>
                        <div class="input-control text full-size">
                            <div class="input-control text full-size">
                                @Html.TextBoxFor(m => m.Deliverydetails.AddressLine1, new { @class = "LineOne", placeholder = "Line 1" })
                            </div>
                            <div class="input-control text full-size">
                                @Html.TextBoxFor(m => m.Deliverydetails.AddressLine2, new { @class = "LineTwo", placeholder = "Line 2" })
                            </div>
                            <div class="input-control text full-size">
                                @Html.TextBoxFor(m => m.Deliverydetails.City, new { @class = "City", placeholder = "City" })
                            </div>
                            <div class="input-control text full-size">
                                @Html.TextBoxFor(m => m.Deliverydetails.State, new { @class = "State", placeholder = "State" })
                            </div>
                        </div>
                    </div>
                </div>
                @*<div class="row cells2">
                    <div class="cell-form margin-right-10 cell size4">
                        <label>Person InCharge</label>
                        <div class="input-control text full-size">
                            @Html.TextBoxFor(m => m.Deliverydetails.PersonInCharge, new { @class = "PersonInCharge", placeholder = "Person InCharge" })
                        </div>
                    </div>
                </div>*@
                <div class="row cells2">
                    <div class="cell-form margin-right-10 cell size4">
                        <label class="display-block">Additional Inventory Details</label>
                        <div class="input-control textarea full-size">
                            @Html.TextAreaFor(m => m.Deliverydetails.AddtionalNotes, new { @class = "ShippingNotes", placeholder = "Inventory Details" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </div>
        <div class="frame" id="frame_3">
                    <hr />
                    <div class="example">
                        <div class="flex-grid">
                            <div class="row cells2">
                                <div class="cell-form margin-right-10 cell size4">
                                    <label class="display-block">Payment Method</label>
                                    <div class="input-control select full-size">
                                        @Html.DropDownListFor(m => m.PaymentMethod, new SelectList(Model.PaymentMethods), new { @class = "PaymentMethod" })
                                    </div>
                                </div>
                                <div class="cell-form margin-right-10 cell size4">
                                    <label>Billing Address</label>
                                    <div class="input-control text full-size">
                                        @Html.TextAreaFor(m => m.BillingAddress, new { @class = "BillingAddress", placeholder = "Billing Address" })
                                    </div>
                                </div>
                            </div>
                            <div class="row cells2">
                                <div class="cell-form margin-right-10 cell size4">
                                    <label>Person InCharge For Billing</label>
                                    <div class="input-control text full-size">
                                        @Html.TextBoxFor(m => m.BillingName, new { @class = "BillingName", placeholder = "Person InCharge For Billing" })
                                    </div>
                                </div>
                            </div>
                            <div class="row cells2">
                                <div class="cell-form margin-right-10 cell size4">
                                    <label class="display-block">Additional Details</label>
                                    <div class="input-control textarea full-size">
                                        @Html.TextAreaFor(m => m.PaymentNotes, new { @class = "PaymentNotes", placeholder = "Additional Details" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
            @Html.HiddenFor(model => model.token.AccessToken, new { id = "token" })
        </div>
    </div>
</div>





<script>

    function tab_click(tab){
        console.log(tab);
        return true;
    }
    function tab_change(tab){
        console.log(tab);
    }

    function nextTab(tab) {
        tab_click(tab);
        tab_change(tab);
    }

    function newOrder() {

        var CurrentCoponent = {
            CustomerName: $(".CustomerName").val(),
            CompanyName: $(".CompanyName").val(),
            AdditionalNotes: $(".AdditionalNotes").val(),
            PaymentMethod: $(".PaymentMethod").val(),
            PaymentNotes: $(".PaymentNotes").val(),
            BillingAddress: $(".BillingAddress").val(),
            BillingName: $(".BillingName").val(),
            Deliverydetails: {
                DeliveryDate: $("#Date").val(),
                DeliveryMethod: $(".DeliveryMethod").val(),
                PersonInCharge: $(".PersonInCharge").val(),
                AddressLine1: $(".LineOne").val(),
                AddressLine2: $(".LineTwo").val(),
                City: $(".City").val(),
                State: $(".State").val(),
                AddtionalNotes: $(".ShippingNotes").val()
            }
        };

        $.ajax({
            url: '/inventory/CreateOrder',
            type: 'POST',
            data: JSON.stringify(CurrentCoponent),
            headers: {
                'Authorization': 'Bearer ' + $('#token').val(),
            },
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                $.Notify({
                    caption: 'Inventory',
                    content: 'Order successfully Created.',
                    type: 'success'
                });

                debugger;
                $('.sidebar').children().removeClass('active');
                $('.sidebar li:nth-child(2)').addClass('active');

                $('#partial-view-container').html(data);
            },
            error: function () {
                $.Notify({
                    caption: 'Inventory',
                    content: 'Order not successfull.',
                    type: 'alert'
                });
            }
        });
    }

    function addPart() {
        saveTempData();
        var Part = { Name: $("#PartName").val() }

        $.ajax({
            url: '/Inventory/AddPart',
            type: 'POST',
            data: JSON.stringify(Part),
            headers: {
                'Authorization': 'Bearer ' + $('#token').val(),
            },
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                debugger;
                $('#partial-view-container').html(data);
            },
        });

    }

    function DeletePart(test) {
        saveTempData();
        var part = { Name: $(test).data('assigned-id') }

        $.ajax({
            url: '/Inventory/DeletePart',
            type: 'DELETE',
            data: JSON.stringify(part),
            headers: {
                'Authorization': 'Bearer ' + $('#token').val(),
            },
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                debugger;
                $('#partial-view-container').html(data);
            },
        });

    }

    function saveTempData() {
        debugger;
        var CurrentCoponent = {
            CustomerName: $(".CustomerName").val(),
            CompanyName: $(".CompanyName").val(),
            AdditionalNotes: $(".AdditionalNotes").val(),
            PaymentMethod: $(".PaymentMethod").val(),
            PaymentNotes: $(".PaymentNotes").val(),
            BillingAddress: $(".BillingAddress").val(),
            BillingName: $(".BillingName").val(),
            Deliverydetails: {
                DeliveryDate: $("#Date").val(),
                DeliveryMethod: $(".DeliveryMethod").val(),
                PersonInCharge: $(".PersonInCharge").val(),
                AddressLine1: $(".LineOne").val(),
                AddressLine2: $(".LineTwo").val(),
                City: $(".City").val(),
                State: $(".State").val(),
                AddtionalNotes: $(".ShippingNotes").val()
            }
        };

        $.ajax({
            url: '/Inventory/SaveTempData',
            type: 'POST',
            data: JSON.stringify(CurrentCoponent),
            contentType: 'application/json; charset=utf-8',
            success: function () { debugger; },
            error: function () { debugger; }
        });
    }
</script>


